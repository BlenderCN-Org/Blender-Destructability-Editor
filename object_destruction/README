This is an addon under construction. It is licensed as GPL. (or will be, if its
done and stable ;-)

Its purpose is the definition of object decomposition in blender and its 
execution in the blender game engine. The Boolean decomposition method is
in fracture_ops.py which is a slightly modified version of the one distributed
with the "Object fracture addon" by pildanovak.

working: -Decomposition with different methods (Boolean, Explosion Modifier, 
		  Knife tool (only basic with jitter and round cuts)
         -Hierarchical decomposition is possible to
		 -Connectivity Calculation (collapses unconnected parts automatically in
          relation to ground objects.
         -Rotated Ground Objects
         -simple undo of decomposition (must be in "editor parenting" mode)
not working yet:
		 -complete evaluation of parenting hierarchy in game engine (uses one 
          level by now only) 
         -movement of object before decomposition causes errors in game engine 
          afterwards (parts not found -> key errors)
          workaround: leave object to be decomposed at (0,0,0) for now
         -normal calculation of parts created by knife tool 
          ->missing surfaces in game engine
          workaround: disable backface culling in material settings after
          enabling "Blender Game" as renderer
		 -hierarchical undo of decomposition
         -re-use of decomposed object's backups (undo and new decomposition 
          works basically but has problems with connectivity grid creation
          workaround: new decomposition -> new file (by now)
 
untested: -rotation of objects before decomposition 
          -multiple grounds, multiple destructors
          -complexer shapes than cubes(!)

to be done additionally: 
		  - maybe change from name based system to object ids
		  - allow custom child objects in parenting hierarchy
            to build complex shapes which decompose to those 
		    objects defined by hand
          - with pre-cubification: use same decomposition of one cube for all
            cubes (with instances)
          - useful integration in blender game engine projects (now done via
            "player" object and logic bricks and destruction_bge.py


BASIC/TESTING USAGE:

         - it involves patching the blender sources, tested with 2.61.3 (r43527)
         - apply "handlerAndKnife.patch" with patch -p0 < handlerAndKnife.patch
           to directory above "blender" directory" in SVN tree 
		   e.g. /home/username/BlenderSVN/blender/....
							   ^^^^^^^^^^
		 - compile .... ;-)
		 - insert line 41 ( " if hasattr(self, attr) != 0:") from provided
           bpy_types.py into the one delivered with blender (or replace it, but
           last thing might NOT work!)
		 - move the "object_destruction" directory below Blender's 
		   "addons_contrib" directory
		 - when starting your compiled version of blender, under testing there
           should be an addon "Object->Destructability Editor", enable it
         - under Object tab you should now find a section "Destructability"
		 - to decompose: best use the default cube, check "Destroyable"
           choose a method and part count and hit "Destroy Object"
		   for pre-cubification: choose "Calculate Ground Connectivity" and 
		   "Intersect with Grid": this creates x*y*z cubes, each one will be
           further decomposed to the given part count
         - this may take a while depending on part count and method
         - then hit "Setup Player" (at the bottom") 
         - if desired choose "Calculate Ground Connectivity" and determine a
		   grid size , used for automatic collapse. 
         - when using connectivity: 
		   move the "Ground" object to the bottom of the cube, scale it to the 
           EXACT bottom size, and (IMPORTANT) the UNIFORMLY a bit larger, so it
           roughly intersects the cube's bottom
 		 - AFTER all has been arranged, hit: "To Game Parenting", this will undo
	       parenting and store the parent relation(s) in game properties
           so the game engine can re-parent all (otherwise decomposition in game
           engine would NOT work
         - this takes a while depending on part count and grid size
         - when done: optionally move the "Player" object a little away from 
           the cube
         - start game engine, aim with mouse, move camera with WASD and YX (for 
           up/down), hold left mouse button to increase the fired ball's speed
           and release left mouse button to FIRE! (a ball at the cube)
         - it should be damaged by now ;-)
 

																										
